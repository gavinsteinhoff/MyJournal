@model IEnumerable<MyJournal.Models.CustomModels.DailyInformation>

@{
    ViewData["Title"] = "Index";
    int daysWithGoodMood = 0;
    int daysInARow = 0;
    double moodAverage = 0;
    double workoutAverage = 0;
    double sleepAverage = 0;
    DateTime lastDate = DateTime.Now;

    if (Model.Count() != 0)
    {
        moodAverage = Math.Round(Model.Average(x => x.UserMood), 1);
        workoutAverage = Math.Round(Model.Average(x => x.MinExercising), 0);
        sleepAverage = Math.Round(Model.Average(x => x.HoursSlept), 1);
        
        lastDate = Model.FirstOrDefault().DailyInformationDateTime;
    }

    List<int> moodData = new List<int>();
    List<string> dataLabel = new List<string>();
    List<int> workOutData = new List<int>();
    List<int> sleepData = new List<int>();
    List<int> moodCount = new List<int>();
    moodCount.Add(Model.Count(x => x.UserMood == 1));
    moodCount.Add(Model.Count(x => x.UserMood == 2));
    moodCount.Add(Model.Count(x => x.UserMood == 3));
    moodCount.Add(Model.Count(x => x.UserMood == 4));
    moodCount.Add(Model.Count(x => x.UserMood == 5));
}


<div class="row">
    <div class="col bg-dark border-top border-light text-light py-3 sideMenuLink">
        @foreach (var item in Model)
        {
            <a asp-action="Details" asp-route-id="@item.DailyInformationID">
                @item.DailyInformationDateTime.ToString("MM/dd/yy") - @Html.DisplayFor(modelItem => item.Title)
            </a>
            <br />

            TimeSpan diff = item.DailyInformationDateTime - lastDate;

            if (diff.Days == 1)
            {
                daysInARow++;
            }
            else
            {
                daysInARow = 0;
            }

            lastDate = item.DailyInformationDateTime;

            if (item.UserMood > 2)
            {
                daysWithGoodMood++;
            }

            dataLabel.Add(item.DailyInformationDateTime.ToString("MM/dd/yy"));

            moodData.Add(item.UserMood);
            workOutData.Add(item.MinExercising);
            sleepData.Add(item.HoursSlept);
        }

    </div>
    <div class="col-12 col-md-10 py-2">

        <a class="btn btn-primary mb-5" asp-action="Create">Create New</a>
        <div class="alert alert-danger" role="alert" id="error" hidden></div>
        <canvas id="myChart" height="100"></canvas>

        <div class="stats my-5">
            <div class="stat-holder">
                <div class="stat" id="mood">
                    @moodAverage
                </div>
                Average Mood
            </div>

            <div class="stat-holder">
                <div class="stat" id="overalMood">
                    @daysWithGoodMood
                </div>
                Days With Good Mood
            </div>

            <div class="stat-holder">
                <div class="stat" id="workingOut">
                    @workoutAverage
                </div>
                Average Minutes Working Out a Day
            </div>

            <div class="stat-holder">
                <div class="stat" id="sleep">
                    @sleepAverage
                </div>
                Average Hours of Sleep a Day
            </div>

            <div class="stat-holder">
                <div class="stat">
                    @daysInARow
                </div>
                Days in a Row
            </div>
        </div>

    </div>
</div>




@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.4.0/Chart.min.js"></script>
    <script>
        @{
            string JsonMoodData = Newtonsoft.Json.JsonConvert.SerializeObject(moodData);
            string JsonWorkOutData = Newtonsoft.Json.JsonConvert.SerializeObject(workOutData);
            string JsonSleepData = Newtonsoft.Json.JsonConvert.SerializeObject(sleepData);
            string JsonMoodCount = Newtonsoft.Json.JsonConvert.SerializeObject(moodCount);
            string JsonDateLabel = Newtonsoft.Json.JsonConvert.SerializeObject(dataLabel);
        }

        let global = {
            chartName: "myChart"
        }

        let count = @Html.Raw(JsonMoodData.Count());

        function moodGraph() {
            let options = {
                scales: {
                    yAxes: [{
                        display: true,
                        ticks: {
                            suggestedMin: 1,
                            stepSize: 1
                        }
                    }]
                },
                legend: {
                    display: false
                },
                title: {
                    display: true,
                    text: 'Daily Mood'
                }
            }
            preGraph(1,@Html.Raw(JsonDateLabel),@Html.Raw(JsonMoodData), options);
        }

        $(document).ready(function () {
            moodGraph();
        });

        $("#mood").click(function () {
            moodGraph();
        });

        $("#overalMood").click(function () {
            let options= {
                title: {
                    display: true,
                    text: 'Number of Moods'
                }
            }
            preGraph(2, ["Mood: 1", "Mood: 2", "Mood: 3", "Mood: 4", "Mood: 5"],@Html.Raw(JsonMoodCount), options);
        });

        $("#workingOut").click(function () {
            let options = {
                scales: {
                    yAxes: [{
                        display: true,
                        ticks: {
                            suggestedMin: 0,
                            stepSize: 15
                        }
                    }]
                },
                legend: {
                    display: false
                },
                title: {
                    display: true,
                    text: 'Minutes Working Out a Day'
                }
            }
            preGraph(1,@Html.Raw(JsonDateLabel),@Html.Raw(JsonWorkOutData), options);
        });

        $("#sleep").click(function () {
            let options = {
                scales: {
                    yAxes: [{
                        display: true,
                        ticks: {
                            suggestedMin: 0,
                            stepSize: 1
                        }
                    }]
                },
                legend: {
                    display: false
                },
                title: {
                    display: true,
                    text: 'Hours of Sleep a Day'
                }
            }
            preGraph(1,@Html.Raw(JsonDateLabel),@Html.Raw(JsonSleepData),options);
        });
    </script>
}
